version: 2
jobs:
  build:
    docker:
    - image: circleci/buildpack-deps:stretch
    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Set up docker
        command: |
          if [[ $CIRCLE_SHELL_ENV == *"localbuild"* ]]; then
              echo "export docker='sudo docker'" >> $BASH_ENV
          else
              echo "export docker='docker'" >> $BASH_ENV
          fi
    - run:
        name: Build Images
        command: |
          $docker build -t $IMAGE_NAME:$BASE_TAG --target=$BASE_TAG .
          $docker build \
            --cache-from $IMAGE_NAME:$BASE_TAG \
            -t $IMAGE_NAME:$DEV_TAG --target=$DEV_TAG .
          $docker build \
            --cache-from $IMAGE_NAME:$BASE_TAG \
            --cache-from $IMAGE_NAME:$DEV_TAG \
            -t $IMAGE_NAME:$LATEST_TAG .
    - run:
        name: Create Tags Directory
        command: mkdir -p ~/tags
    - run:
        name: Archive Docker Images
        command: |
          $docker save -o ~/tags/$DEV_TAG.tar $IMAGE_NAME:$DEV_TAG
          $docker save -o ~/tags/$LATEST_TAG.tar $IMAGE_NAME:$LATEST_TAG
    - persist_to_workspace:
        root: ~/tags
        paths: 
         - dev.tar
         - latest.tar
    environment:
    - IMAGE_NAME: roag92/golang-wiki
    - BASE_TAG: base
    - DEV_TAG: dev
    - LATEST_TAG: latest
  test:
    docker:
    - image: circleci/buildpack-deps:stretch
    steps:
    - setup_remote_docker
    - run:
        name: Set up docker
        command: |
          if [[ $CIRCLE_SHELL_ENV == *"localbuild"* ]]; then
              echo "export docker='sudo docker'" >> $BASH_ENV
          else
              echo "export docker='docker'" >> $BASH_ENV
          fi
    - attach_workspace:
        at: ~/tags
    - run:
        name: Load archived Docker image
        command: |
          $docker load -i ~/tags/$DEV_TAG.tar
    - run:
        name: Run unit test
        command: |
          $docker run -it $IMAGE_NAME:$DEV_TAG sh -c 'go test ./...'
    environment:
    - IMAGE_NAME: roag92/golang-wiki
    - DEV_TAG: dev
    - LATEST_TAG: latest
workflows:
  version: 2

  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
